// Code generated by "stringer -type=NodeType -trimprefix=NodeType -output ./nodetype_string.go"; DO NOT EDIT.

package ast

import "strconv"

const (
	_NodeType_name_0 = "RootIdentifierParameterArgumentArgumentListNullable"
	_NodeType_name_1 = "ScalarEncapsedStringPartScalarDnumberScalarHeredocScalarMagicConstantScalarLnumberScalarEncapsedScalarString"
	_NodeType_name_2 = "NameNamePartNameNameNameFullyQualifiedNameRelative"
	_NodeType_name_3 = "StmtFinallyStmtNopStmtUnsetStmtStaticStmtPropertyStmtGroupUseStmtAltElseIfStmtElseStmtCaseStmtConstListStmtExpressionStmtReturnStmtAltForeachStmtForStmtClassConstListStmtInterfaceStmtEchoStmtInterfaceExtendsStmtTraitStmtContinueStmtInlineHtmlStmtClassExtendsStmtUseListStmtTraitUseStmtTraitUsePrecedenceStmtTryStmtDeclareStmtDefaultStmtForeachStmtTraitAdaptationListStmtGlobalStmtWhileStmtIfStmtAltElseStmtGotoStmtClassStmtLabelStmtThrowStmtClassImplementsStmtUseStmtPropertyListStmtAltWhileStmtAltIfStmtCatchStmtConstantStmtTraitUseAliasStmtNamespaceStmtSwitchStmtBreakStmtClassMethodStmtFunctionStmtAltSwitchStmtHaltCompilerStmtTraitMethodRefStmtDoStmtStaticVarStmtCaseListStmtElseIfStmtAltForStmtStmtList"
	_NodeType_name_4 = "ExprInstanceOfExprBooleanNotExprNewExprClosureUseExprPreDecExprEmptyExprErrorSuppressExprEvalExprIssetExprClassConstFetchExprExitExprShortListExprIncludeOnceExprPostIncExprConstFetchExprTernaryExprVariableExprRequireOnceExprPostDecExprBitwiseNotExprIncludeExprListExprShellExecExprMethodCallExprReferenceExprPrintExprUnaryPlusExprPropertyFetchExprArrayExprStaticPropertyFetchExprUnaryMinusExprRequireExprShortArrayExprPreIncExprYieldFromExprYieldExprCloneExprStaticCallExprClosureExprArrayDimFetchExprArrayItemExprFunctionCall"
	_NodeType_name_5 = "AssignAssignAssignMulAssignMinusAssignShiftLeftAssignModAssignPowAssignBitwiseXorAssignConcatAssignDivAssignPlusAssignReferenceAssignBitwiseAndAssignBitwiseOrAssignShiftRight"
	_NodeType_name_6 = "BinaryBooleanOrBinaryMulBinaryMinusBinaryEqualBinaryIdenticalBinaryLogicalXorBinaryCoalesceBinaryBooleanAndBinarySmallerBinarySmallerOrEqualBinaryShiftLeftBinaryModBinaryGreaterOrEqualBinaryLogicalAndBinaryLogicalOrBinaryPowBinaryBitwiseXorBinaryConcatBinaryDivBinaryPlusBinaryGreaterBinaryBitwiseAndBinaryBitwiseOrBinarySpaceshipBinaryShiftRightBinaryNotIdenticalBinaryNotEqual"
	_NodeType_name_7 = "CastUnsetCastDoubleCastStringCastBoolCastArrayCastIntCastObject"
)

var (
	_NodeType_index_0 = [...]uint8{0, 4, 14, 23, 31, 43, 51}
	_NodeType_index_1 = [...]uint8{0, 24, 37, 50, 69, 82, 96, 108}
	_NodeType_index_2 = [...]uint8{0, 12, 20, 38, 50}
	_NodeType_index_3 = [...]uint16{0, 11, 18, 27, 37, 49, 61, 74, 82, 90, 103, 117, 127, 141, 148, 166, 179, 187, 207, 216, 228, 242, 258, 269, 281, 303, 310, 321, 332, 343, 366, 376, 385, 391, 402, 410, 419, 428, 437, 456, 463, 479, 491, 500, 509, 521, 538, 551, 561, 570, 585, 597, 610, 626, 644, 650, 663, 675, 685, 695, 707}
	_NodeType_index_4 = [...]uint16{0, 14, 28, 35, 49, 59, 68, 85, 93, 102, 121, 129, 142, 157, 168, 182, 193, 205, 220, 231, 245, 256, 264, 277, 291, 304, 313, 326, 343, 352, 375, 389, 400, 414, 424, 437, 446, 455, 469, 480, 497, 510, 526}
	_NodeType_index_5 = [...]uint8{0, 12, 21, 32, 47, 56, 65, 81, 93, 102, 112, 127, 143, 158, 174}
	_NodeType_index_6 = [...]uint16{0, 15, 24, 35, 46, 61, 77, 91, 107, 120, 140, 155, 164, 184, 200, 215, 224, 240, 252, 261, 271, 284, 300, 315, 330, 346, 364, 378}
	_NodeType_index_7 = [...]uint8{0, 9, 19, 29, 37, 46, 53, 63}
)

func (i NodeType) String() string {
	switch {
	case 257 <= i && i <= 262:
		i -= 257
		return _NodeType_name_0[_NodeType_index_0[i]:_NodeType_index_0[i+1]]
	case 523 <= i && i <= 529:
		i -= 523
		return _NodeType_name_1[_NodeType_index_1[i]:_NodeType_index_1[i+1]]
	case 1031 <= i && i <= 1034:
		i -= 1031
		return _NodeType_name_2[_NodeType_index_2[i]:_NodeType_index_2[i+1]]
	case 2066 <= i && i <= 2125:
		i -= 2066
		return _NodeType_name_3[_NodeType_index_3[i]:_NodeType_index_3[i+1]]
	case 4174 <= i && i <= 4215:
		i -= 4174
		return _NodeType_name_4[_NodeType_index_4[i]:_NodeType_index_4[i+1]]
	case 12415 <= i && i <= 12428:
		i -= 12415
		return _NodeType_name_5[_NodeType_index_5[i]:_NodeType_index_5[i+1]]
	case 20621 <= i && i <= 20647:
		i -= 20621
		return _NodeType_name_6[_NodeType_index_6[i]:_NodeType_index_6[i+1]]
	case 36984 <= i && i <= 36990:
		i -= 36984
		return _NodeType_name_7[_NodeType_index_7[i]:_NodeType_index_7[i+1]]
	default:
		return "NodeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
